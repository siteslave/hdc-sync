#!/usr/bin/env node

'use strict';

var program = require('commander');
var fs = require('fs');
var fse = require('fs-extra');
var shell = require('shelljs');
var colors = require('cli-color');
var moment = require('moment');
// Main Sync program
var Sync = require('../lib/hdc-sync');
var Server = require('../lib/server');
var Config = require('../lib/config');
var Conn = require('../lib/connection');
//var hdc = require('../lib/hdc-export');

var configData = null;

program
    .version('0.0.7')
    .option('-c, --config <file>', 'Specify configure file')
    .option('-t, --test', 'Testing connection')
    .option('-y, --year <year>', 'Year, exp: 2557, 2558')
    .parse(process.argv);

if (program.config && !program.test) {
    // Check configure file exists
    fs.access(program.config, fs.R_OK, function (err) {
        if (err) {
            console.log(colors.bgBlack.yellow('No configure file found! '));
            console.log(colors.blackBright(program.config));
        } else {

            configData = Config.getConfig(program.config);
            var year = program.year || moment().get('year') + 543;
            // Get mode

            if (configData.mode == 'server') {
                // create default folder
                shell.mkdir('-p', configData.config.server.extractPath);
                shell.mkdir('-p', configData.config.server.uploadPath);
                // Start server mode
                Server.init(configData);

            } else if (configData.mode == 'client') {

                shell.mkdir('-p', configData.config.client.exportPath);
                shell.mkdir('-p', configData.config.client.outboxPath);
                shell.mkdir('-p', configData.config.client.backupPath);
                fse.ensureFileSync(configData.config.client.logPath);
                console.log(colors.green('Starting with client mode...'));

                /**
                 * Todo
                 * - Check HDC Connection
                 * - Check Server Connection
                 */

                var hdcResult = true;
                var serverResult = true;

                Conn.testHDCConnection(configData.config.client.hdc)
                    .then(function (resp) {

                        hdcResult = resp;

                        var testingUrl = 'http://' + configData.config.server.address + ':' + configData.config.server.port + '/status';
                        return Conn.testServerConnection(testingUrl);

                    }).then(function (resp) {
                        serverResult = resp;

                        if (hdcResult) {
                            console.log('Testing HDC connection...\t\t\t' + colors.green('OK'));
                        } else {
                            console.log('Testing HDC connection...\t\t\t' + colors.red('FAILED'));
                        }

                        if (serverResult) {
                            console.log('Testing Server connection...\t\t\t' + colors.green('OK'));
                        } else {
                            console.log('Testing Server connection...\t\t\t' + colors.red('FAILED'));
                        }

                        if (serverResult && hdcResult) {
                            Sync.startSync(configData, year);
                        } else {
                            console.log(colors.red('Connection failed, exit program...'));
                            process.exit(1);
                        }
                    });

            } else {
                console.log(colors.bgBlack.red('Please set running mode!'));
                process.exit(1);
            }

        }
    });

} else if(program.config && program.test) {
    console.log('Testing connection.');
} else {
    console.log(colors.red('Please specify configuration file!'));
    process.exit(1);
}

